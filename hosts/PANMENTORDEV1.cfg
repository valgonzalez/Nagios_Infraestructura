###############################################################################
# WINDOWS.CFG - SAMPLE CONFIG FILE FOR MONITORING A WINDOWS MACHINE
#
#
# NOTES: This config file assumes that you are using the sample configuration
#	 files that get installed with the Nagios quickstart guide.
#
###############################################################################




###############################################################################
###############################################################################
#
# HOST DEFINITIONS
#
###############################################################################
###############################################################################

# Define a host for the Windows machine we'll be monitoring
# Change the host_name, alias, and address to fit your situation

define host{
	use		windows-server	; Inherit default values from a template
	host_name	PANMENTORDEV1	; The name we're giving to this host
	alias		PANMENTORDEV1(Windows Server)	; A longer name associated with the host
	address		172.27.90.20   ; IP address of the host
        icon_image      win40.gif
        hostgroups      Windows
        max_check_attempts      3
        check_period            24x7
        check_command           check-host-alive
        contacts                itops, noc
        notification_interval   60
        notification_period     24x7
	}


###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################


# Create a service for monitoring the version of NSCLient++ that is installed
# Change the host_name to match the name of the host you defined above

define service{
	use			generic-service
	host_name		PANMENTORDEV1
	service_description	NSClient++ Version
	check_command		check_nt!CLIENTVERSION
	}



# Create a service for monitoring the uptime of the server
# Change the host_name to match the name of the host you defined above

define service{
	use			generic-service
	host_name		PANMENTORDEV1
	service_description	Uptime
	check_command		check_nt!UPTIME
	}



# Create a service for monitoring CPU load
# Change the host_name to match the name of the host you defined above

define service{
	use			generic-service
	host_name		PANMENTORDEV1
	service_description	CPU Load
	check_command		check_nt!CPULOAD!-l 5,90,95
        action_url /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$' onMouseOver='showGraphPopup(this)' onMouseOut='hideGraphPopup()' rel='/nagiosgraph/cgi-bin/showgraph.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
        contacts                itops
        max_check_attempts      3
        check_interval          5
        retry_interval          1
        check_period            24x7
        notification_interval   60
        notification_period     24x7	
}




# Create a service for monitoring memory usage
# Change the host_name to match the name of the host you defined above

define service{
	use			generic-service
	host_name		PANMENTORDEV1
	service_description	Memory Usage
	check_command		check_nt!MEMUSE!-w 90 -c 95
        contacts                itops
        max_check_attempts      3
        check_interval          5
        retry_interval          1
        check_period            24x7
        notification_interval   60
        notification_period     24x7
	}



# Create a service for monitoring C:\ disk usage
# Change the host_name to match the name of the host you defined above

define service{
	use			generic-service
	host_name		PANMENTORDEV1
	service_description	C:\ Drive Space
	check_command		check_nt!USEDDISKSPACE!-l c -w 90 -c 95
        contacts                itops, noc
        max_check_attempts      3
        check_interval          5
        retry_interval          1
        check_period            24x7
        notification_interval   60
        notification_period     24x7
	}

define service{
        use                     generic-service
        host_name               PANMENTORDEV1
        service_description     D:\ Drive Space
        check_command           check_nt!USEDDISKSPACE!-l c -w 90 -c 95
        contacts                itops, noc
        max_check_attempts      3
        check_interval          5
        retry_interval          1
        check_period            24x7
        notification_interval   60
        notification_period     24x7
        }

# Create a service for monitoring the W3SVC service
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		PANMENTORDEV1
#	service_description	W3SVC
#	check_command		check_nt!SERVICESTATE!-d SHOWALL -l W3SVC
#	}



# Create a service for monitoring the Explorer.exe process
# Change the host_name to match the name of the host you defined above

#define service{
#	use			generic-service
#	host_name		PANMENTORDEV1
#	service_description	Explorer
#	check_command		check_nt!PROCSTATE!-d SHOWALL -l Explorer.exe
#	}

